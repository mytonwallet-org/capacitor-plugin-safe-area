{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core'\n\nexport interface SafeAreaPlugin {\n  /**\n   *  Get mobile SafeArea info\n   */\n  getSafeAreaInsets (): Promise<SafeAreaInsets>;\n\n  /**\n   * Get mobile statusbar height\n   */\n  getStatusBarHeight (): Promise<StatusBarInfo>;\n\n  /**\n   * Set navigation bar immersive on Android , not implemented on IOS\n   */\n  setImmersiveNavigationBar (): Promise<void>;\n\n  /**\n   * Event listener when safe-area changed\n   * @param event\n   * @param listenerFunc\n   */\n  addListener (\n    event: 'safeAreaChanged',\n    listenerFunc: (data: SafeAreaInsets) => void\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  /**\n   * Capacitor plugin method to remove all created listeners\n   * @deprecated use `SafeArea.removeAllListeners()` instead\n   */\n  removeAllListeners (): Promise<void>\n}\n\ninterface SafeArea {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport interface SafeAreaInsets {\n  insets: SafeArea;\n}\n\nexport interface StatusBarInfo {\n  statusBarHeight: number;\n}\n"]}